" ==================== basic options ==================== "
set activate=quickmark,paste
set complete=l
set focuscontent
set followhints=1
" set guioptions=Brbm
set guioptions=BrbmNn
set hlsearch
set showstatuslinks=2
set wildoptions=auto

" emulate vim's "after"
set runtimepath+=~/.vimperator/after,~/vimperator/after

" auto pass keys
autocmd LocationChange .* js modes.passAllKeys=false
autocmd LocationChange reader\\.livedoor\\.com/reader js modes.passAllKeys=true
autocmd LocationChange reader\\.livedoor\\.com/public js modes.passAllKeys=true
autocmd LocationChange fastladder\\.com/reader js modes.passAllKeys=true
autocmd LocationChange mail\\.google\\.com/mail js modes.passAllKeys=true

" ==================== Firefox options ==================== "
" disable accesskey
set! ui.key.generalAccessKey=0
" hide close button
set! browser.tabs.closeButtons=2
" open bookmarks in background
set! browser.tabs.loadBookmarksInBackground=true
" open tabs by javascript in background
set! browser.tabs.loadDivertedInBackground=true
" allow lots of popups for ldr
set! dom.popup_maximum=1000
" allow control sidebar position
" set! layout.scrollbar.side=1


" ==================== key mappings ==================== "
" increase j, k, h, l
noremap j 5j
noremap k 5k
noremap h 3h
noremap l 3l

" enable to select completion list by <C-p> and <C-n>
cnoremap <C-p> <S-Tab>
cnoremap <C-n> <Tab>

" avoid unintended paste
" only use "gP"
noremap p <Nop>
noremap P <Nop>

" ghでハイライトオフ
noremap gh :nohl<CR>

" Flashblock
noremap <C-f> :js Flashblock.toggleSiteWhitelisted();<CR>r

" search
js <<EOM
(function() {
    var defsearch = options.get("defsearch");

    mappings.addUserMap([modes.NORMAL], ["s"],
        "search by default search engine in current tab",
        function() { commandline.open(":", "open " + defsearch.value + " ", modes.EX); });

    mappings.addUserMap([modes.NORMAL], ["S"],
        "search by default search engine in new tab",
        function() { commandline.open(":", "tabopen " + defsearch.value + " ", modes.EX); });
})();
EOM

" toggle guioptions
js <<EOM
(function() {
    var guioptions = options.get("guioptions");
    var original = guioptions.value;

    mappings.addUserMap([modes.NORMAL], ["I"],
        "toggle guioptions",
        function() {
            if(guioptions.value != original)
                guioptions.set(original);
            else
                guioptions.set("TmBrb");
        });
})();
EOM

js <<EOM
commands.addUserCommand(["wrappedjavascript", "wjs"],
    "Run a JavaScript command in wrappedJSObject context",
    function (args)
    {
        try
        {
            liberator.eval("with(window.content.wrappedJSObject) {" + args.string + "}");
        }
        catch (e)
        {
            liberator.echoerr(e);
        }
    },
    {
        completer: function (context) completion.javascript(context),
        hereDoc: true,
        literal: 0
    });
EOM


" ==================== hints ==================== "
js <<EOM
hints.addMode("i", "Focus to input",
    function(element) element.focus(),
    function() "//input[not(@type='hidden')] | //textarea | //xhtml:input[not(@type='hidden')] | //xhtml:textarea"
    );

hints.addMode("h", "Hide element",
    function(element) {
        element.style.display = "none";
    },
    function() "//*");

// require FireBug
hints.addMode("x", "copy XPath",
    function(element) {
        let xpath = FBL.getElementXPath(element);
        liberator.echo(xpath);
        util.copyToClipboard(xpath);
    },
    function() "//*");
EOM


" ==================== plugin options ==================== "

" migemo_hint
set hintmatching="custom"

" commandBookmarklet
let command_bookmarklet_prefix=""

" migratestatusbar
javascript <<EOM
liberator.globalVariables.migrate_elements = [
    {
        // star button of awesome bar
        id:    'star-button',
        dest:  'liberator-statusline-field-url',
        after: true,
    },
    {
        // icon that show the existence of RSS and Atom on current page
        id:    'feed-button',
        dest:  'liberator-statusline-field-url',
        after: true,
    },
    {
        // favicon of awesome bar
        id:    'page-proxy-stack',
        dest:  'liberator-statusline',
        after: false,
    },
];
EOM

" proxy
js <<EOM
liberator.globalVariables.proxy_settings = [
    {
        conf_name: 'disable',
        conf_usage: 'direct connection',
        settings: [
            {
                label: 'type',
                param: 0
            }
        ]
    },
    {
        conf_name: 'cocproxy',
        conf_usage: 'use CocProxy',
        settings: [
            {
                label: 'type',
                param: 1
            },
            {
                label: 'http',
                param: 'localhost'
            },
            {
                label: 'http_port',
                param: 5432
            }
        ]
    }
];
EOM

" ==================== colorscheme ==================== "
colorscheme mac

" force disable ime in commandline
style -name commandline-ime chrome://* #liberator-commandline-command input { ime-mode: inactive; }


" ==================== others ==================== "
" load local file
js <<EOM
(function() {
    var local = "~/.vimperatorrc.local";
    var file = io.getFile(local);
    if(file.exists() && file.isReadable()) {
        io.source(local, true);
    }
})();
EOM
