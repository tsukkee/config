" ==================== basic options ==================== "
set activate=quickmark,paste
set complete=sl
set focuscontent
set followhints=1
set toolbars=all,nomenu,noaddons
set hintchars=hjklgfdsa
set hintinputs+=name
set hlsearch
set showstatuslinks=2
set status-=location
set smartcase

set nextpattern+='次','\bolder\b'
set previouspattern+='前','\bnerwer\b'

let mapleader=","

" バグ回避
js setToolbarVisibility(document.getElementById('PersonalToolbar'), true);

" floatbox
set animations
style -name liberator-floatbox-opacity chrome://* #liberator-completions,#liberator-multiline-output { opacity: .8; position: relative; z-index: 9999; }


" ==================== Firefox options ==================== "
" disable accesskey
set! ui.key.generalAccessKey=0
" hide close button
set! browser.tabs.closeButtons=2
" open bookmarks in background
set! browser.tabs.loadBookmarksInBackground=true
" open tabs by javascript in background
set! browser.tabs.loadDivertedInBackground=true
" allow lots of popups for ldr
set! dom.popup_maximum=1000
" show tab preview
set! browser.allTabs.previews=true
set! browser.ctrlTab.previews=true
" change new tab position
set! browser.tabs.insertRelatedAfterCurrent=false
" change behaviour on open folder
set! browser.tabs.loadFolderAndReplace=false
" use mousewheel acceleration
set! mousewheel.acceleration.factor=5
set! mousewheel.acceleration.start=3
" for js develop
set! javascript.options.strict=false
set! javascript.options.showInConsole=false
set! browser.dom.window.dump.enabled=false
set! javascript.options.jitprofiling.chrome=true
set! javascript.options.methodjit.chrome=true
" http://space.geocities.yahoo.co.jp/gl/alice0775/view/20110416/1302920985
set! image.mem.min_discard_timeout_ms=10000

" ==================== key mappings ==================== "
" increase j, k, h, l
nnoremap j 5j
nnoremap k 5k
nnoremap h 3h
nnoremap l 3l

" Use beginning matches on command-line history
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

nnoremap d <C-d>
nnoremap D d

" avoid unintended paste
" only use "gP"
nnoremap p <Nop>
nnoremap P <Nop>

" readlater bookmarklet
nnoremap <silent> <C-r> :readlater<CR>

" toggle Flashblock
nnoremap <silent> <C-f> :js Flashblock.toggleSiteWhitelisted()<CR>:reload<CR>

" disable highlight
nnoremap <silent> gh :nohl<CR>:offwordhighlight<CR>

" toggle autopagerize
nnoremap <silent> a :toggleautopagerize<CR>

" dispatch mouse event
js <<EOM
(function() {
function dispatchMouseClickByXPath(xpath) {
    let elements = util.evaluateXPath(xpath);
    if(elements.snapshotLength) {
        buffer.followLink(elements.snapshotItem(0));
    }
    else {
        liberator.echomsg("not found: " + xpath);
    }
}

commands.addUserCommand(["toggleautopagerize"],
    "toggle on/off autopagerize",
    function(args)
    {
        var d = window.content.document;
        var ev = d.createEvent('Event');
        ev.initEvent('AutoPagerizeToggleRequest', true, false);
        d.dispatchEvent(ev);
        liberator.echomsg('toggle');
    });

commands.addUserCommand(["offwordhighlight"],
    "off wordhighlight",
    function(args)
    {
        dispatchMouseClickByXPath('id("wordhighlight_words")//*[@value="off"]');
    });
})();
EOM


" ==================== plugin options ==================== "
" local mappings
js <<EOM
function addLocalMappings(buffer, maps) {
  maps.forEach(
    function (map) {
      let [cmd, action, extra] = map;
      let actionFunc = action;
      extra || (extra = {});

      if (typeof action == "string") {
        if (action.charAt(0) == ':')
          actionFunc = extra.open ? function () commandline.open("", action, modes.EX)
                                  : function () liberator.execute(action);
        else
          actionFunc = function () events.feedkeys(action, extra.noremap, true);
      }
      extra.matchingUrls = buffer;
      mappings.addUserMap(
        [modes.NORMAL],
        [cmd],
        "Local mapping for " + buffer,
        actionFunc,
        extra
      );
    }
  );
}
EOM

" Lazy
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>

" move status-bar
lazy js document.getElementById("liberator-status-toolbar").appendChild(document.getElementById("status-bar"))

" migemo hint
set hintmatching=custom
js <<EOM
liberator.plugins.customHintMatcher = function(inputString){
    let r = migemo.getRegExp(inputString);
    return function(hintString) r.test(hintString);
};
EOM

" commandBookmarklet
let command_bookmarklet_prefix=""

" sbmincsearch
let sbmincsearch_service_name = "pinboard"
let sbmincsearch_max = 15
lazy set complete=stIl

" feedSomeKeys
lazy fmaps -u='(fastladder|reader\.livedoor)\.com/reader' s a r c j k f,j F,k <Space> <S-Space> b p o v > J < K
lazy fmaps -u='mail\.google\.com/mail' u k j o <CR> p n c ? x s y e m ! # h
lazy fmaps -u='www\.tumblr\.com/dashboard' -events=vkeydown j k
lazy fmaps -u='www\.google\.(com|co\.jp)/reader/' -events=vkeypress j k <Space> <S-Space> X O N P s,NO a,PO S,s v r F,f f,j F,k ? /
lazy fmaps -u='twitter\.com' ? j k
lazy fmaps -u='twitter\.com' -events=vkeydown F,f R,r T,t m n <CR> <Space> / . gh gr gp gf gm gu

" stella
js <<EOM
addLocalMappings(
  /^(http:\/\/(es|www).nicovideo.jp\/(watch|playlist\/mylist)|http:\/\/(jp|www)\.youtube\.com\/watch|http:\/\/(www\.)?vimeo\.com\/(channels\/(hd)?#)?\d+)/,
  [
    ['<C-g>', ':pageinfo S',      ],
    ['P',     ':stplay',          ],
    ['M',     ':stmute',          ],
    ['C',     ':stcomment',       ],
    ['zz',    ':stlarge',         ],
    ['R',     ':strepeat',        ],
    ['[',     ':stvolume! -10',   ],
    [']',     ':stvolume! 10',    ],
    [',',     ':stseek! -10',     ],
    ['.',     ':stseek! 10',      ],
    ['<',     ':stseek! -60',     ],
    ['>',     ':stseek! 60',      ],
    ['s',     ':stseek ',         {open: true}],
    ['S',     ':stseek! ',        {open: true}],
    ['v',     ':stvolume ',       {open: true}],
    ['V',     ':stvolume! ',      {open: true}],
    ['o',     ':strelations ',    {open: true}],
    ['O',     ':strelations! ',   {open: true}],
  ]
);
EOM

" spatial navigation
let spatial_navigation_mappings='<C-h> <C-j> <C-k> <C-l>'

" emblur
js <<EOM
function emblur(e){
  switch(e.type){
    case 'keydown': case 'keyup':
    return emblur.off = e.shiftKey || e.ctrlKey;
  }
  if(emblur.off || emblur.ignore.test(e.target.tagName)) return;
  clearTimeout(emblur.tim);
  emblur.tim = setTimeout(
    function _emblur(lm) lm && lm.blur(), 500, e.target);
}
emblur.ignore = /^(?!embed$|object$)/i;
let(c = document.getElementById('content')){
  for each(let type in ['focus', 'keydown', 'keyup'])
    c.addEventListener(type, emblur, type === 'focus');
}
EOM


" ==================== refcontrol ==================== "
let g:refcontrol_enabled = "true"
javascript <<EOM
liberator.globalVariables.refcontrol = {
    '@DEFAULT'   : ''
};
EOM


" ==================== colorscheme ==================== "
" colorscheme mac
colorscheme vimpwhite

" force disable ime in commandline
style -name commandline-ime chrome://* #liberator-commandline-command input { ime-mode: inactive; }


" ==================== others ==================== "
" load local file
source! ~/.vimperatorrc.local
