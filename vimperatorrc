" ==================== basic options ==================== "
set activate=quickmark,paste
set complete=sl
set focuscontent
set followhints=1
set guioptions=BrbN
set hlsearch
set showstatuslinks=2
set wildoptions=

" emulate vim's "after"
set runtimepath+=~/.vimperator/after,~/vimperator/after

let mapleader=","


" ==================== Firefox options ==================== "
" disable accesskey
set! ui.key.generalAccessKey=0
" hide close button
set! browser.tabs.closeButtons=2
" open bookmarks in background
set! browser.tabs.loadBookmarksInBackground=true
" open tabs by javascript in background
set! browser.tabs.loadDivertedInBackground=true
" allow lots of popups for ldr
set! dom.popup_maximum=1000
" allow control sidebar position
" set! layout.scrollbar.side=1


" ==================== key mappings ==================== "
" increase j, k, h, l
nnoremap j 5j
nnoremap k 5k
nnoremap h 3h
nnoremap l 3l

" enable to select completion list by <C-p> and <C-n>
cnoremap <C-p> <S-Tab>
cnoremap <C-n> <Tab>

" avoid unintended paste
" only use "gP"
nnoremap p <Nop>
nnoremap P <Nop>

" ghでハイライトオフ
nnoremap gh :nohl<CR>:offwordhighlight<CR>

" toggle autopagerize
nnoremap a :toggleautopagerize<CR>

" toggle guioptions
js <<EOM
(function() {
    let guioptions = options.get("guioptions");
    let original = guioptions.value;

    mappings.addUserMap([modes.NORMAL], ["I"],
        "toggle guioptions",
        function() {
            if(guioptions.value != original)
                guioptions.set(original);
            else
                guioptions.set("TBrbN");
        });
})();
EOM

" javascript
js <<EOM
commands.addUserCommand(["javascriptincontent", "jsc"],
    "Run a JavaScript command in content context",
    function (args)
    {
        try
        {
            let s = new Components.utils.Sandbox(buffer.URL);
            s.window = content.window;
            s.document = content.document;
            // s.__proto__ = content.window.wrappedJSObject;
            return Components.utils.evalInSandbox(args.string, s);
        }
        catch (e)
        {
            liberator.echoerr(e);
        }
    },
    {
        completer: function (context) completion.javascript(context),
        hereDoc: true,
        literal: 0
    });
EOM

" dispatch mouse event
js <<EOM
(function() {
function dispatchMouseClickByXPath(xpath) {
    let d = window.getBrowser().contentDocument;
    let elements = d.evaluate(xpath ,d, null, 7, null);
    if(elements.snapshotLength) {
        let e = d.createEvent('MouseEvents');
        e.initEvent('click', true, true);
        elements.snapshotItem(0).dispatchEvent(e);
    }
    else {
        liberator.echoerr("not found: " + xpath);
    }
}

commands.addUserCommand(["toggleautopagerize"],
    "toggle on/off autopagerize",
    function(args)
    {
        dispatchMouseClickByXPath('id("autopagerize_help")//a[@class="autopagerize_link"]');
    });

commands.addUserCommand(["offwordhighlight"],
    "off wordhighlight",
    function(args)
    {
        dispatchMouseClickByXPath('id("wordhighlight_words")//*[@value="off"]');
    });
})();
EOM


" ==================== hints ==================== "
js <<EOM
hints.addMode("i", "Focus to input",
    function(element) element.focus(),
    function() "//input[not(@type='hidden')] | //textarea | //xhtml:input[not(@type='hidden')] | //xhtml:textarea"
    );

// require FireBug
hints.addMode("x", "copy XPath",
    function(element) {
        let xpath = FBL.getElementXPath(element);
        liberator.echo(xpath);
        util.copyToClipboard(xpath);
    },
    function() "//*");
EOM


" ==================== plugin options ==================== "

" commandBookmarklet
let command_bookmarklet_prefix=""

" sbmincsearch
let sbmincsearch_service_name = "delicious"
let sbmincsearch_max = 15

" migratestatusbar
javascript <<EOM
liberator.globalVariables.migrate_elements = [
    {
        // icon that show the existence of RSS and Atom on current page
        id:    'feed-button',
        dest:  'security-button',
        after: true,
    },
    {
        // star button of awesome bar
        id:    'star-button',
        dest:  'security-button',
        after: true,
    },
    /*{
        // favicon of awesome bar
        id:    'page-proxy-stack',
        dest:  'liberator-statusline',
        after: false,
    },*/
];
EOM


" ==================== colorscheme ==================== "
colorscheme mac

" force disable ime in commandline
style -name commandline-ime chrome://* #liberator-commandline-command input { ime-mode: inactive; }


" ==================== others ==================== "
" load local file
js <<EOM
(function() {
    var local = "~/.vimperatorrc.local";
    var file = io.getFile(local);
    if(file.exists() && file.isReadable()) {
        io.source(local, true);
    }
})();
EOM
