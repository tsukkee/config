" ==================== basic options ==================== "
set activate=quickmark,paste
set complete=sl
set focuscontent
set followhints=1
set guioptions=Bmrb
set hintinputs+=name
set hlsearch
set showstatuslinks=2
set wildoptions=auto

set nextpattern+='次','\bolder\b'
set previouspattern+='前','\bnerwer\b'

" emulate vim's "after"
set runtimepath+=~/.vimperator/after,~/vimperator/after

" set jsdebugger

let mapleader=","

" ==================== Firefox options ==================== "
" disable accesskey
set! ui.key.generalAccessKey=0
" hide close button
set! browser.tabs.closeButtons=2
" open bookmarks in background
set! browser.tabs.loadBookmarksInBackground=true
" open tabs by javascript in background
set! browser.tabs.loadDivertedInBackground=true
" allow lots of popups for ldr
set! dom.popup_maximum=1000
" allow control sidebar position
" set! layout.scrollbar.side=1


" ==================== key mappings ==================== "
" increase j, k, h, l
nnoremap j 5j
nnoremap k 5k
nnoremap h 3h
nnoremap l 3l

" enable to select completion list by <C-p> and <C-n>
cnoremap <C-p> <S-Tab>
cnoremap <C-n> <Tab>

" avoid unintended paste
" only use "gP"
nnoremap p <Nop>
nnoremap P <Nop>

" ghでハイライトオフ
nnoremap <silent> gh :nohl<CR>:offwordhighlight<CR>

" Iでナビゲーションツールバーをトグル
nnoremap <silent> I :toolbartoggle ナビゲーションツールバー<CR>

" toggle autopagerize
nnoremap <silent> a :toggleautopagerize<CR>

" dispatch mouse event
js <<EOM
(function() {
function dispatchMouseClickByXPath(xpath) {
    let d = window.getBrowser().contentDocument;
    let elements = d.evaluate(xpath ,d, null, 7, null);
    if(elements.snapshotLength) {
        let e = d.createEvent('MouseEvents');
        e.initEvent('click', true, true);
        elements.snapshotItem(0).dispatchEvent(e);
    }
    else {
        liberator.echoerr("not found: " + xpath);
    }
}

commands.addUserCommand(["toggleautopagerize"],
    "toggle on/off autopagerize",
    function(args)
    {
        dispatchMouseClickByXPath('id("autopagerize_help")//a[@class="autopagerize_link"]');
    });

commands.addUserCommand(["offwordhighlight"],
    "off wordhighlight",
    function(args)
    {
        dispatchMouseClickByXPath('id("wordhighlight_words")//*[@value="off"]');
    });
})();
EOM


" ==================== plugin options ==================== "
" migemo hint
set hintmatching=custom
js <<EOM
liberator.plugins.customHintMatcher = function(inputString){
    let r = migemo.getRegExp(inputString);
    return function(hintString) r.test(hintString);
};
EOM

" migemo completion
js <<EOM
/*
(function() {
CompletionContext.prototype.match = function(str){
    let migemoPattern = new RegExp(migemo.query(this.filter), "i");
    return migemoPattern.test(str);
};
})();
*/
EOM

" commandBookmarklet
let command_bookmarklet_prefix=""

" sbmincsearch
let sbmincsearch_service_name = "delicious"
let sbmincsearch_max = 15


" ==================== colorscheme ==================== "
colorscheme mac

" force disable ime in commandline
style -name commandline-ime chrome://* #liberator-commandline-command input { ime-mode: inactive; }


" ==================== others ==================== "
" load local file
js <<EOM
(function() {
    let local = "~/.vimperatorrc.local";
//    let file = io.getFile(local);
//    if(file.exists() && file.isReadable()) {
        io.source(local, true);
//    }
})();
EOM
