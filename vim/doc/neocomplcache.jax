*neocomplcache.txt*	究極の自動補完環境

Version: 2.57
Author : Shougo <Shougo.Matsu@gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*neocomplcache-contents*

Introduction		|neocomplcache-introduction|
Interface		|neocomplcache-interface|
  Commands		  |neocomplcache-commands|
  Variables		  |neocomplcache-variables|
  Key mappings		  |neocomplcache-key-mappings|
Examples		|neocomplcache-examples|
Plugins			|neocomplcache-plugins|
Create plugin		|neocomplcache-create-plugin|
Bugs			|neocomplcache-bugs|
Changelog		|neocomplcache-changelog|

==============================================================================
INTRODUCTION					*neocomplcache-introduction*

*neocomplcache* はバッファ中のキーワードをキャッシュすることで、キーワード補完を行う。
Vim組み込みのキーワード補完とは違い、自前で実装しているため、柔軟なカスタマイズが可能である。
ただし他のプラグインよりメモリを大量に消費する。

==============================================================================
INTERFACE					*neocomplcache-interface*

------------------------------------------------------------------------------
COMMANDS 					*neocomplcache-commands*

:NeoComplCacheEnable					*:NeoComplCacheEnable*
		neocomplcacheを有効にし、初期化を行う。
		これを実行すると、今までのキャッシュが消えてしまうので注意。

:NeoComplCacheDisable					*:NeoComplCacheDisable*
		neocomplcacheを無効にし、後始末を行う。

:NeoComplCacheToggle					*:NeoComplCacheToggle*
		neocomplcacheのロック状態を切り替える。
		ロックしている間は自動補完ができなくなる。

:Neco 							*:Neco*
		？？？

:NeoComplCacheLock					*:NeoComplCacheLock*
		自動補完にロックをかけ、自動補完しないようにする。
		自動補完をロックしていたとしても、手動補完は使用できる。
		自動補完を一時的に無効にしたい場合に有効。

:NeoComplCacheUnLock					*:NeoComplCacheUnLock*
		自動補完にかけたロックを解除する。

:NeoComplCacheAutoCompletionLength			*:NeoComplCacheAutoCompletionLength*
		自動補完する文字数を一時的に変更する。

:NeoComplCachePartialCompletionLength			*:NeoComplCachePartialCompletionLength*
		部分マッチ補完する文字数を一時的に変更する。

:NeoComplCacheCachingBuffer [bufnr]			*:NeoComplCacheCachingBuffer*
		[bufnr]で示されるバッファを完全にキャッシュする。
		大きなバッファに対しては、かなり時間がかかるので注意。
		[bufnr]を省略すると、カレントバッファを指定したことになる。

:NeoComplCacheCachingDisable [bufnr]			*:NeoComplCacheCachingDisable*
		[bufnr]で示されるバッファをキャッシュしないようにする。
		バッファのキャッシュは削除されるので注意。
		[bufnr]を省略すると、カレントバッファを指定したことになる。

:NeoComplCacheCachingEnable [bufnr]			*:NeoComplCacheCachingEnable*
		[bufnr]で示されるバッファをキャッシュできるようにする。
		[bufnr]を省略すると、カレントバッファを指定したことになる。

:NeoComplCachePrintSource [bufnr]			*:NeoComplCachePrintSource*
		[bufnr]で示されるバッファのキャッシュ情報をカレントバッファに書き出す。
		[bufnr]を省略すると、カレントバッファを指定したことになる。
		主にデバッグ用の機能のため、ユーザーが使うことはないだろう。

:NeoComplCacheOutputKeyword [bufnr]			*:NeoComplCacheOutputKeyword*
		[bufnr]で示されるバッファのキャッシュしたキーワードをカレントバッファに書き出す。
		[bufnr]を省略すると、カレントバッファを指定したことになる。
		辞書ファイルを自分で作成するときに便利かもしれない。

:NeoComplCacheCreateTags [bufnr]			*:NeoComplCacheCreateTags*
		[bufnr]で示されるバッファから、タグ情報を生成する。
		[bufnr]を省略すると、カレントバッファを指定したことになる。

:NeoComplCacheEditSnippets [filetype]			*:NeoComplCacheEditSnippets*
		[filetype]のスニペット補完ファイルを編集する。
		[filetype]を省略すると、カレントバッファのファイルタイプを編集する。
		[filetype]のスニペット補完ファイルが存在しない場合、新しく生成される。
		このコマンドでは、|g:NeoComplCache_SnippetsDir|にあるスニペット補完ファイルを優先的に編集する。
		スニペット補完ファイルを保存すると、自動的に再キャッシュされる。

------------------------------------------------------------------------------
VARIABLES 					*neocomplcache-variables*

g:NeoComplCache_EnableAtStartup				*g:NeoComplCache_EnableAtStartup*
		Vim起動時にneocomplcacheを有効にするかどうか制御する。
		1ならば自動で有効化する。このオプションは.vimrcで設定するべきである。
		
		初期値は0なので、手動で有効にしない限りneocomplcacheは使用できない。

g:NeoComplCache_MaxList					*g:NeoComplCache_MaxList*
		ポップアップメニューで表示される候補の数を制御する。
		候補がこれを超えた場合は切り詰められる。
		
		初期値は100である。

g:NeoComplCache_MaxKeywordWidth				*g:NeoComplCache_MaxKeywordWidth*
		ポップアップメニューで表示される候補の表示幅を制御する。
		これを超えた場合は適当に切り詰められる。
		
		初期値は50である。

g:NeoComplCache_MaxFilenameWidth			*g:NeoComplCache_MaxFilenameWidth*
		ポップアップメニューで表示されるファイル名の表示幅を制御する。
		これを超えた場合は切り詰められる。
		
		初期値は15である。

g:NeoComplCache_PartialMatch				*g:NeoComplCache_PartialMatch*
		補完時に部分マッチを使用するかを制御する。
		1なら部分マッチを使用する。
		
		初期値は1である。

g:NeoComplCache_KeywordCompletionStartLength		*g:NeoComplCache_KeywordCompletionStartLength*
		キー入力時に自動補完を行う入力数を制御する。
		
		初期値は2である。

g:NeoComplCache_ManualCompletionStartLength		*g:NeoComplCache_ManualCompletionStartLength*
		手動補完時に補完を行う入力数を制御する。
		この値を減らすと便利だが、ポップアップ表示時 <C-h> や <BS> などで文字を削除したときに重くなる可能性がある。
		
		初期値は2である。

g:NeoComplCache_PartialCompletionStartLength		*g:NeoComplCache_PartialCompletionStartLength*
		補完時に部分マッチを行う入力数を制御する。
		
		初期値は4である。

g:NeoComplCache_MinKeywordLength			*g:NeoComplCache_MinKeywordLength*
		バッファや辞書ファイル中で、補完の対象となるキーワードの最小長さを制御する。
		
		初期値は4である。

g:NeoComplCache_MinSyntaxLength				*g:NeoComplCache_MinSyntaxLength*
		シンタックスファイル中で、補完の対象となるキーワードの最小長さを制御する。
		
		初期値は4である。

g:NeoComplCache_IgnoreCase				*g:NeoComplCache_IgnoreCase*
		補完候補を探すときに、大文字・小文字を無視するかを制御する。
		1ならば無視する。
		
		初期値は1である。

g:NeoComplCache_SmartCase				*g:NeoComplCache_SmartCase*
		入力に大文字が含まれている場合は、大文字・小文字を無視しないようにする。
		1ならば有効。
		
		初期値は0である。

g:NeoComplCache_AlphabeticalOrder			*g:NeoComplCache_AlphabeticalOrder*
		候補をアルファベット順で並び替えるかを制御する。
		このオプションを設定すると、neocomplcacheの機能がかなり制限されるが、
		補完処理は高速化する。1ならば有効。
		
		初期値は0なので、頻度順に並び替える。

g:NeoComplCache_CacheLineCount				*g:NeoComplCache_CacheLineCount*
		バッファの何行ごとにキャッシュするかを制御する。
		Ver.2.31までキャッシュラインは固定だったが、一行が長いHTMLやTeXで重いために可変となった。
		これが小さいほど候補の探索は早くなるが、キャッシュするのに時間がかかる。
		
		初期値は70である。

g:NeoComplCache_DisableAutoComplete			*g:NeoComplCache_DisableAutoComplete*
		自動補完を無効にするかどうかを制御する。
		1ならば自動補完が無効になるが、 <C-x><C-u> による手動補完は使用できる。
		
		初期値は0なので、自動補完が有効になっている。

g:NeoComplCache_EnableWildCard				*g:NeoComplCache_EnableWildCard*
		省入力のための'*'や'-'といったワイルドカード文字を容認するかどうかを制御する。
		1ならばワイルドカードが使用できる。
		
		初期値は1なので、ワイルドカードが有効になっている。

g:NeoComplCache_EnableQuickMatch			*g:NeoComplCache_EnableQuickMatch*
		省入力のために、候補の横に表示されている数字で候補を選択できるようにするか制御する。
		1ならば有効になる。
		
		初期値は1なので、有効になっている。

g:NeoComplCache_CalcRankRandomize			*g:NeoComplCache_CalcRankRandomize*
		頻度を再計算するときに、乱数を使用するかを制御する。
		1ならば有効になる。
		
		初期値は+reltimeの時に1となる。

g:NeoComplCache_QuickMatchMaxLists			*g:NeoComplCache_QuickMatchMaxLists*
		|g:NeoComplCache_EnableQuickMatch|の時に、候補の横に表示する数字の数を制御する。
		最高が100で、それを超えると無視される。
		
		初期値は100である。

g:NeoComplCache_EnableSkipCompletion			*g:NeoComplCache_EnableSkipCompletion*
		候補の計算に時間がかかりすぎると自動補完を中止するかどうか制御する。
		1ならば有効になる。
		
		初期値は+reltimeの時に1となる。

g:NeoComplCache_SkipCompletionTime			*g:NeoComplCache_SkipCompletionTime*
		自動補完を中止するための計算時間を定義する。
		このオプションの値は文字列でなければならない。
		
		初期値は'0.2'である。

g:NeoComplCache_SkipInputTime				*g:NeoComplCache_SkipInputTime*
		自動補完を中止するための連続入力時間を定義する。
		このオプションの値は文字列でなければならない。
		
		初期値は'0.0'なので、連続入力により補完を中止することはない。

g:NeoComplCache_PreviousKeywordCompletion		*g:NeoComplCache_PreviousKeywordCompletion*
		単語の出現頻度だけではなく、前の単語とのつながりも考慮して候補の並び替えを行うかどうかを制御する。
		1ならば有効になる。
		
		初期値は1である。

g:NeoComplCache_TagsAutoUpdate				*g:NeoComplCache_TagsAutoUpdate*
		バッファの保存時、タグファイルがあったら自動的にアップデートするかどうかを制御する。
		タグ補完や内部でタグファイルを使用するオムニ補完に便利である。
		
		初期値は0である。

g:NeoComplCache_TryFilenameCompletion			*g:NeoComplCache_TryFilenameCompletion*
		ファイルパスとなる文字列を入力したとき、自動でファイル名補完を行うかどうかを制御する。
		シェル系のスクリプトや、ファイル名を入力するときに便利である。
		1ならば有効になる。
		
		初期値は1である。

g:NeoComplCache_EnableInfo				*g:NeoComplCache_EnableInfo*
		プレビューウインドウが開いているとき、追加情報を表示するかを制御する。
		現在はtags_completeプラグインのみが対応している。
		1ならば有効になる。このオプションは'completeopt'を変更するので注意。
		
		初期値は0である。

g:NeoComplCache_CachingRandomize			*g:NeoComplCache_CachingRandomize*
		Insert modeから出る時、現在のキャッシュラインをキャッシュするかどうか決定するのに、
		乱数を用いるかどうか制御する。1ならば有効になる。
		
		初期値は+reltimeの時に1となる。

g:NeoComplCache_EnableCamelCaseCompletion		*g:NeoComplCache_EnableCamelCaseCompletion*
		大文字を入力したときに、それを単語の区切りとしてあいまい検索を行うかどうか制御する。
		例えば AE と入力したとき、 ArgumentsException とマッチするようになる。
		1ならば有効になる。
		
		副作用があるので、初期値は0となっている。

g:NeoComplCache_EnableUnderbarCompletion		*g:NeoComplCache_EnableUnderbarCompletion*
		_を入力したときに、それを単語の区切りとしてあいまい検索を行うかどうか制御する。
		例えば p_h と入力したとき、 public_html とマッチするようになる。
		1ならば有効になる。
		
		副作用があるので、初期値は0となっている。

g:NeoComplCache_FilenameCompletionSkipItems		*g:NeoComplCache_FilenameCompletionSkipItems*
		ファイル名を自動補完するときに、スキップを行う候補数を制御する。
		候補がこの数以上ならば、自動補完はスキップされる。
		
		初期値は100となっている。

g:NeoComplCache_SnippetsDir				*g:NeoComplCache_SnippetsDir*
		ユーザが定義したスニペット補完ファイルのパスを指定する。
		ここで指定したディレクトリが実際に存在しない場合、無視される。
		ユーザ定義のスニペット補完ファイルは標準のスニペット補完ファイルを読み込んだ後に読み込まれる。
		重複したスニペットは上書きされる。
		
		この変数はユーザが自分で定義しない限り存在しない。

g:NeoComplCache_TemporaryDir				*g:NeoComplCache_TemporaryDir*
		neocomplcacheが一時ファイルを書き出すディレクトリを指定する。
		ここで指定したディレクトリが実際に存在しない場合、作成される。
		例えばkeyword_complete.vimはキーワードのキャッシュをこの下の'keyword_cache'ディレクトリに保存する。
		
		初期値は'~/.neocon'である。

g:NeoComplCache_KeywordPatterns				*g:NeoComplCache_KeywordPatterns*
		補完するためのキーワードパターンを記録する。
		これはファイルタイプ毎に正規表現で指定されている。
		カスタマイズする場合は、パターンの先頭に\vを使用しなければならない。
		
		初期値は複雑なので、autoload/neocomplcache.vimを参照せよ。

g:NeoComplCache_OmniPatterns				*g:NeoComplCache_OmniPatterns*
		オムニ補完するためのキーワードパターンを記録する。
		これはファイルタイプ毎に正規表現で指定されている。
		カスタマイズする場合は、パターンの先頭に\vを使用しなければならない。
		
		初期値は複雑なので、autoload/neocomplcache.vimを参照せよ。

g:NeoComplCache_SameFileTypeLists			*g:NeoComplCache_SameFileTypeLists*
		ファイルタイプを相互に関連づけるためのディクショナリ。
		cとcppを相互参照させるときなどに有効である。
		
		初期値は複雑なので、autoload/neocomplcache.vimを参照せよ。

g:NeoComplCache_NonBufferFileTypeDetect			*g:NeoComplCache_NonBufferFileTypeDetect*
		拡張子とファイルタイプを関連づけるためのディクショナリ。
		辞書ファイルなど、うまくファイルタイプが判定できないときに有効である。
		
		初期値は複雑なので、autoload/neocomplcache.vimを参照せよ。

g:NeoComplCache_DictionaryFileTypeLists			*g:NeoComplCache_DictionaryFileTypeLists*
		ファイルタイプに辞書ファイルを関連づけるためのディクショナリ。
		キーにファイルタイプ、値に辞書ファイルへのパスを指定する。
		
		初期値は空である。

------------------------------------------------------------------------------
KEY MAPPINGS 					*neocomplcache-key-mappings*

<Plug>(neocomplcache_keyword_caching)				*<Plug>(neocomplcache_keyword_caching)*
		現在のキャッシュラインをキャッシュする。
		打ち込んだ単語をすぐにキャッシュしたい時に便利である。

<Plug>(neocomplcache_snippets_expand)				*<Plug>(neocomplcache_snippets_expand)*
		複数行のスニペットを展開する。プレースホルダの処理も行う。
		展開したスニペットはランクが上昇するため、上位に表示されやすくなる。

neocomplcache#manual_filename_complete				*neocomplcache#manual_filename_complete*
		inoremap <expr>上で使用する。neocomplcacheのファイル名補完を手動で呼び出す。
		Vim標準のファイル名補完を置き換えるときに使う。
>
		inoremap <expr><C-x><C-f>  neocomplcache#manual_filename_complete()
<
neocomplcache#close_popup				*neocomplcache#close_popup*
		inoremap <expr>上で使用する。neocomplcacheのポップアップを閉じ、補完を終了する。
		Vim標準の<C-y>よりも確実にポップアップを閉じることができる。
		この関数を使ってポップアップを閉じると、選択した候補のランクが上昇する。
>
		inoremap <expr><C-y>  pumvisible() ? neocomplcache#close_popup() :  "\<C-y>"
<
neocomplcache#cancel_popup				*neocomplcache#cancel_popup*
		inoremap <expr>上で使用する。neocomplcacheの補完をキャンセルする。
		Vim標準の<C-e>よりも確実にポップアップを閉じることができる。
>
		inoremap <expr><C-e>  pumvisible() ? neocomplcache#cancel_popup() : "\<C-e>"
<
==============================================================================
EXAMPLES					*neocomplcache-examples*
>
	" Don't use autocomplpop.
	let g:AutoComplPop_NotEnableAtStartup = 1
	" Use neocomplcache.
	let g:NeoComplCache_EnableAtStartup = 1
	" Use smartcase.
	let g:NeoComplCache_SmartCase = 1
	" Use previous keyword completion.
	let g:NeoComplCache_PreviousKeywordCompletion = 1
	" Use preview window.
	let g:NeoComplCache_EnableInfo = 1
	" Use camel case completion.
	let g:NeoComplCache_EnableCamelCaseCompletion = 1
	" Use underbar completion.
	let g:NeoComplCache_EnableUnderbarCompletion = 1
	" Set minimum syntax keyword length.
	let g:NeoComplCache_MinSyntaxLength = 3
	" Set skip input time.
	let g:NeoComplCache_SkipInputTime = '0.1'
	
	" Define dictionary.
	let g:NeoComplCache_DictionaryFileTypeLists = {
	    \ 'default' : '',
	    \ 'vimshell' : $HOME.'/.vimshell_hist',
	    \ 'scheme' : $HOME.'/.gosh_completions'
	        \ }
	
	" Define keyword.
	if !exists('g:NeoComplCache_KeywordPatterns')
	    let g:NeoComplCache_KeywordPatterns = {}
	endif
	let g:NeoComplCache_KeywordPatterns['default'] = '\h\w*'
	
	" Plugin key-mappings.
	imap <silent><C-l>     <Plug>(neocomplcache_snippets_expand)
	smap <silent><C-l>     <Plug>(neocomplcache_snippets_expand)
	nmap <silent><C-e>     <Plug>(neocomplcache_keyword_caching)
	imap <expr><silent><C-e>     pumvisible() ? "\<C-e>" : "\<Plug>(neocomplcache_keyword_caching)"
	inoremap <expr><C-h> pumvisible() ? "\<C-y>\<C-h>" : "\<C-h>"
<
==============================================================================
PLUGINS					*neocomplcache-plugins*

この項では、neocomplcacheに添付されているプラグインの解説を行う。
自分で作成したプラグインは、autoload/neocomplcacheディレクトリに保存することで、
neocomplcacheにより自動的に読み込まれる。

keyword_complete.vim					*keyword_complete*
		バッファやディクショナリからキーワードを収集し、補完に利用するプラグイン。
		neocomplcacheの基本機能も提供しているため、このプラグインを削除すると
		neocomplcacheは正常に動作しない。

snippets_complete.vim					*snippets_complete*
		スニペット補完ファイルからスニペットを読み込み、補完に利用するプラグイン。
		snipMate.vimやsnippetsEmu.vimと似たような機能を提供する。
		neocomplcacheの機能を使い、スニペットを検索できるため、
		スニペットを覚える手間が省けるだろう。
		スニペットの定義はsnipMate.vimと似ているため、
		自分でスニペットを定義したり改造するのも簡単である。

tags_complete.vim					*tags_complete*
		'tags'で定義されているタグファイルを読み込み、補完候補に加えるプラグイン。
		タグファイルが大きいと重いため、手動補完でしか動作しない。
		g:NeoComplCache_EnableInfoが1ならば、追加情報も表示する。

syntax_complete.vim					*syntax_complete*
		標準で提供されているautoload/syntaxcomplete.vimのように、
		シンタックスファイルを解析し、補完候補に加えるプラグイン。
		autoload/syntaxcomplete.vimよりもたくさんの候補を認識できる。

==============================================================================
BUGS						*neocomplcache-bugs*

==============================================================================
CREATE PLUGIN					*neocomplcache-create-plugin*

この項では、neocomplcacheのプラグインを作成する方法について解説する。
プラグインを自作することで、neocomplcacheの能力は無限大に広がるだろう。

==============================================================================
CHANGELOG					*neocomplcache-changelog*

量が多いため、plugin/neocomplcache.vimを参照せよ。

==============================================================================
vim:tw=78:ts=8:ft=help:norl:fen:fdl=0:fdm=marker:
